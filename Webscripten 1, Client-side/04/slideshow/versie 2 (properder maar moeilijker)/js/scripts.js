/** * Clientside Scripting - Labo 02 - slideshow * * - handles first, previous, next and last controls * - adds back / forward keyboard navigation * - handles a start / stop slideshow button with 1s per photo * * This version uses DOM navigation with nextElementSibling and previousElementSibling to find previous and next item * * @author Rogier van der Linde <rogier.vanderlinde@odisee.be> * **/// encapsulate scripts(function() {	'use strict';	/**	* Function to show an item	*/	var showItem = function(item) {		// find big image		var photoBig = document.getElementById('photoBig');		// change		var img = item.querySelector('img');		photoBig.src = img.getAttribute('data-src-l');		photoBig.alt = img.alt;		// remove activeItem class from previous link and set to current; note: classList is only supported by IE10 and later		var activeItem = document.querySelector('#thumbsmenu li.active');		if (activeItem) activeItem.classList.remove('active');		item.classList.add('active');	};	/**	* Function to show previous item	*/	var showPreviousItem = function() {		// find current active item		var activeItem = document.querySelector('#thumbsmenu li.active');		if (!activeItem) return;		// show previous		var previousItem = activeItem.previousElementSibling;		if (!previousItem) previousItem = document.querySelector('#thumbsmenu li:last-child');		showItem(previousItem);	};	/**	* Function to show next item	*/	var showNextItem = function() {		// find current active item		var activeItem = document.querySelector('#thumbsmenu li.active');		if (!activeItem) return;		// show next		var nextItem = activeItem.nextElementSibling;		if (!nextItem) nextItem = document.querySelector('#thumbsmenu li:first-child');		showItem(nextItem);	};	// start scripts	window.addEventListener('load', function() {		// add events to all items		var items = document.querySelectorAll('#thumbsmenu li');		for (var i = 0; i < items.length; i++) {			items[i].addEventListener('click', function(e) {				showItem(this);				e.preventDefault();			});		}		// if no item activeItem, activate first		var activeItem = document.querySelector('#thumbsmenu li.active');		if (!activeItem) items[0].classList.add('active');		// controls		document.getElementById('lnkFirst').addEventListener('click', function(e) {			showItem(items[0]);			e.preventDefault();		});		document.getElementById('lnkPrev').addEventListener('click', function(e) {			showPreviousItem();			e.preventDefault();		});		document.getElementById('lnkNext').addEventListener('click', function(e) {			showNextItem();			e.preventDefault();		});		document.getElementById('lnkLast').addEventListener('click', function(e) {			showItem(items[items.length - 1]);			e.preventDefault();		});		// keyboard		document.addEventListener('keydown', function(e) {			var code = (e.keyCode ? e.keyCode : e.which);			switch (event.keyCode) {				case 37: showPreviousItem(); e.preventDefault(); break;				case 39: showNextItem(); e.preventDefault(); break;			}		});		// play		var timer;		document.getElementById('btnPlay').addEventListener('click', function(e) {			if (!this.playing) {				this.value = 'stop';				this.playing = true;				timer = setInterval(showNextItem, 1000);			} else {				this.value = 'start';				this.playing = false;				clearInterval(timer);			}		});	});})();